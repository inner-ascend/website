"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getDevServerLocation_exports = {};
__export(getDevServerLocation_exports, {
  getDevServerLocation: () => getDevServerLocation
});
module.exports = __toCommonJS(getDevServerLocation_exports);
var import_getDevServer = __toESM(require("react-native/Libraries/Core/Devtools/getDevServer")), location;
function getDevServerLocation() {
  if (!location) {
    var { url } = (0, import_getDevServer.default)(), origin = url.replace(/\/$/, ""), host = origin.replace(/https?:\/\//, "");
    location = {
      host,
      hostname: host.split(":")[0],
      href: url,
      origin,
      pathname: url.split(host)[1],
      port: host.split(":")[1],
      protocol: (url.match(/^([a-z])+:\/\//) || [
        void 0,
        void 0
      ])[1]
    };
  }
  return location;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getDevServerLocation
});
//# sourceMappingURL=getDevServerLocation.js.map
