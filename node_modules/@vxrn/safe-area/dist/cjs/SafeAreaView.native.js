"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var SafeAreaView_exports = {};
__export(SafeAreaView_exports, {
  SafeAreaView: () => SafeAreaView
});
module.exports = __toCommonJS(SafeAreaView_exports);
var import_jsx_runtime = require("react/jsx-runtime"), React = __toESM(require("react"), 1), import_react_native = require("react-native"), import_SafeAreaContext = require("./SafeAreaContext"), TOP = 8, RIGHT = 4, BOTTOM = 2, LEFT = 1, ALL = 15, edgeBitmaskMap = {
  top: TOP,
  right: RIGHT,
  bottom: BOTTOM,
  left: LEFT
}, SafeAreaView = /* @__PURE__ */ React.forwardRef(function(param, ref) {
  var { style = {}, mode, edges, ...rest } = param, insets = (0, import_SafeAreaContext.useSafeAreaInsets)(), edgeBitmask = edges != null ? Array.isArray(edges) ? edges.reduce(function(acc, edge) {
    return acc | edgeBitmaskMap[edge];
  }, 0) : Object.keys(edges).reduce(function(acc, edge) {
    return acc | edgeBitmaskMap[edge];
  }, 0) : ALL, appliedStyle = React.useMemo(function() {
    var insetTop = edgeBitmask & TOP ? insets.top : 0, insetRight = edgeBitmask & RIGHT ? insets.right : 0, insetBottom = edgeBitmask & BOTTOM ? insets.bottom : 0, insetLeft = edgeBitmask & LEFT ? insets.left : 0, flatStyle = import_react_native.StyleSheet.flatten(style);
    if (mode === "margin") {
      var { margin = 0, marginVertical = margin, marginHorizontal = margin, marginTop = marginVertical, marginRight = marginHorizontal, marginBottom = marginVertical, marginLeft = marginHorizontal } = flatStyle, marginStyle = {
        marginTop: marginTop + insetTop,
        marginRight: marginRight + insetRight,
        marginBottom: marginBottom + insetBottom,
        marginLeft: marginLeft + insetLeft
      };
      return [
        style,
        marginStyle
      ];
    }
    var { padding = 0, paddingVertical = padding, paddingHorizontal = padding, paddingTop = paddingVertical, paddingRight = paddingHorizontal, paddingBottom = paddingVertical, paddingLeft = paddingHorizontal } = flatStyle, paddingStyle = {
      paddingTop: paddingTop + insetTop,
      paddingRight: paddingRight + insetRight,
      paddingBottom: paddingBottom + insetBottom,
      paddingLeft: paddingLeft + insetLeft
    };
    return [
      style,
      paddingStyle
    ];
  }, [
    style,
    insets,
    mode,
    edgeBitmask
  ]);
  return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(import_react_native.View, {
    style: appliedStyle,
    ...rest,
    ref
  });
});
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  SafeAreaView
});
//# sourceMappingURL=SafeAreaView.js.map
