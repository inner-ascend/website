import debug from "debug";
const DEBUG = process.env.DEBUG;
function createDebugger(namespacePartial, options = {}) {
  return {
    debug: createSingleDebugger(namespacePartial, options),
    debugDetails: createSingleDebugger(namespacePartial, options)
  };
}
function createSingleDebugger(namespacePartial, options = {}) {
  const namespace = namespacePartial.includes(":") ? namespacePartial : `vxrn:${namespacePartial}`,
    log = debug(namespace),
    {
      onlyWhenFocused
    } = options;
  let enabled = log.enabled;
  if (enabled && onlyWhenFocused) {
    const ns = typeof onlyWhenFocused == "string" ? onlyWhenFocused : namespace;
    enabled = !!DEBUG?.includes(ns);
  }
  const filter = void 0;
  if (enabled) {
    const fn = (...args) => {
      (!filter || args.some(a => a?.includes?.(filter))) && log(...args);
    };
    return fn.namespace = namespace, fn;
  }
}
export { createDebugger };
//# sourceMappingURL=index.mjs.map
