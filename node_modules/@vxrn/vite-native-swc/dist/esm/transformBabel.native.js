import babel from "@babel/core";
async function transformGenerators(input) {
  var { development = !1 } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return await new Promise(function(res, rej) {
    babel.transform(input, {
      filename: "code.js",
      plugins: [
        [
          "@babel/plugin-transform-destructuring"
        ],
        [
          "@babel/plugin-transform-react-jsx",
          {
            development
          }
        ],
        [
          "@babel/plugin-transform-async-generator-functions"
        ],
        [
          "@babel/plugin-transform-async-to-generator"
        ],
        [
          "@babel/plugin-transform-runtime",
          {
            helpers: !0,
            rengerator: !1
          }
        ]
      ],
      compact: !1,
      minified: !1
    }, function(err, result) {
      (!result || err) && rej(err || "no res"), res(result.code);
    });
  });
}
export {
  transformGenerators
};
//# sourceMappingURL=transformBabel.js.map
