import { createFilter } from "vite";
import { transformFlowBabel } from "./transformFlowBabel";
async function transformFlow(input) {
  var { development = !1 } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, final = await transformFlowBabel(input);
  return final;
}
function createFlowPlugin(opts) {
  if (!(!opts?.include || Array.isArray(opts.include) && opts.include.length === 0)) {
    var filter = createFilter(opts?.include, opts?.exclude);
    return {
      name: "@vxrn/vite-flow",
      enforce: "pre",
      transform(code, id) {
        return filter(id) ? transformFlow(code) : null;
      }
    };
  }
}
export {
  createFlowPlugin as default,
  transformFlow
};
//# sourceMappingURL=index.js.map
