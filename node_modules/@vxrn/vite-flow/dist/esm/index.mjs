import { createFilter } from "vite";
import { transformFlowBabel } from "./transformFlowBabel.mjs";
async function transformFlow(input, {
  development = !1
} = {}) {
  return await transformFlowBabel(input);
}
function createFlowPlugin(opts) {
  if (!opts?.include || Array.isArray(opts.include) && opts.include.length === 0) return;
  const filter = createFilter(opts?.include, opts?.exclude);
  return {
    name: "@vxrn/vite-flow",
    enforce: "pre",
    transform(code, id) {
      return filter(id) ? transformFlow(code) : null;
    }
  };
}
export { createFlowPlugin as default, transformFlow };
//# sourceMappingURL=index.mjs.map
