var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var index_exports = {};
__export(index_exports, {
  default: () => createFlowPlugin,
  transformFlow: () => transformFlow
});
module.exports = __toCommonJS(index_exports);
var import_vite = require("vite"), import_transformFlowBabel = require("./transformFlowBabel");
async function transformFlow(input, { development = !1 } = {}) {
  return await (0, import_transformFlowBabel.transformFlowBabel)(input);
}
function createFlowPlugin(opts) {
  if (!opts?.include || Array.isArray(opts.include) && opts.include.length === 0)
    return;
  const filter = (0, import_vite.createFilter)(opts?.include, opts?.exclude);
  return {
    name: "@vxrn/vite-flow",
    enforce: "pre",
    transform(code, id) {
      return filter(id) ? transformFlow(code) : null;
    }
  };
}
//# sourceMappingURL=index.js.map
