var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var index_exports = {};
__export(index_exports, {
  default: () => index_default,
  parse: () => parse,
  stringify: () => stringify
});
module.exports = __toCommonJS(index_exports);
const parse = (queryString) => {
  const params = new URLSearchParams(queryString), result = {};
  return params.forEach((value, key) => {
    result[key] ? Array.isArray(result[key]) ? result[key].push(value) : result[key] = [result[key], value] : result[key] = value;
  }), result;
}, stringify = (obj) => {
  const params = new URLSearchParams();
  return Object.entries(obj).forEach(([key, value]) => {
    Array.isArray(value) ? value.forEach((v) => params.append(key, v)) : params.append(key, value);
  }), params.toString();
};
var index_default = {
  parse,
  stringify
};
//# sourceMappingURL=index.js.map
