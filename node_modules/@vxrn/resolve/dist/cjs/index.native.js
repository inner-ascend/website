"use strict";
var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf, __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toESM = (mod, isNodeMode, target) => (target = mod != null ? __create(__getProtoOf(mod)) : {}, __copyProps(
  // If the importer is in node compatibility mode or this is not an ESM
  // file that has been converted to a CommonJS file using a Babel-
  // compatible transform (i.e. "__esModule" has not been set), then set
  // "default" to the CommonJS "module.exports" for node compatibility.
  isNodeMode || !mod || !mod.__esModule ? __defProp(target, "default", { value: mod, enumerable: !0 }) : target,
  mod
)), __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var index_exports = {};
__export(index_exports, {
  resolvePath: () => resolvePath
});
module.exports = __toCommonJS(index_exports);
var import_node_module = __toESM(require("node:module"), 1), import_node_url = require("node:url");
const import_meta = {};
var resolver = "resolve" in import_meta ? function(path, from) {
  return (0, import_node_url.fileURLToPath)(import_meta.resolve(path, from));
} : "url" in import_meta ? function(path, from) {
  return new URL(path, import_meta.url).pathname;
} : require.resolve, resolverV2 = function(path) {
  var from = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : process.cwd(), _$require = import_node_module.default.createRequire(from), importPath = _$require.resolve(path, {
    paths: [
      from
    ]
  });
  return importPath;
}, resolvePath = function(path, from) {
  try {
    return resolver(path, from);
  } catch {
    return resolverV2(path, from);
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  resolvePath
});
//# sourceMappingURL=index.js.map
