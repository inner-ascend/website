"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var exec_exports = {};
__export(exec_exports, {
  exec: () => exec,
  execPromise: () => execPromise,
  execPromiseQuiet: () => execPromiseQuiet
});
module.exports = __toCommonJS(exec_exports);
var import_node_child_process = require("node:child_process"), exec = function(cmd, options) {
  var _execSync;
  return ((_execSync = (0, import_node_child_process.execSync)(cmd, options)) === null || _execSync === void 0 ? void 0 : _execSync.toString()) || "";
}, execPromise = function(cmd, options) {
  return new Promise(function(resolve, reject) {
    var [command, ...args] = cmd.split(" "), child = (0, import_node_child_process.spawn)(command, args, {
      stdio: options != null && options.quiet ? "pipe" : "inherit",
      shell: !0,
      ...options
    });
    if (!(options != null && options.quiet) || process.env.DEBUG) {
      var _child_stdout, _child_stderr;
      (_child_stdout = child.stdout) === null || _child_stdout === void 0 || _child_stdout.pipe(process.stdout), (_child_stderr = child.stderr) === null || _child_stderr === void 0 || _child_stderr.pipe(process.stderr);
    }
    child.on("close", function(code) {
      code !== 0 ? reject(new Error(`Command failed with exit code ${code}: ${cmd}`)) : resolve();
    }), child.on("error", function(error) {
      reject(error);
    });
  });
}, execPromiseQuiet = function(cmd, options) {
  return execPromise(cmd, {
    ...options,
    quiet: !0
  });
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  exec,
  execPromise,
  execPromiseQuiet
});
//# sourceMappingURL=exec.js.map
